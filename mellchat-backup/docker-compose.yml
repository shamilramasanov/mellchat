version: '3.8'

services:
  # Databases
  postgres:
    image: postgres:15-alpine
    container_name: mellchat-postgres
    environment:
      POSTGRES_DB: mellchat
      POSTGRES_USER: mellchat
      POSTGRES_PASSWORD: mellchat_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/postgres/migrations:/docker-entrypoint-initdb.d
    networks:
      - mellchat-network

  redis:
    image: redis:7-alpine
    container_name: mellchat-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./database/redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - mellchat-network

  # Backend Services
  api-gateway:
    build:
      context: ./backend/api-gateway
      dockerfile: Dockerfile
    container_name: mellchat-api-gateway
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - POSTGRES_URL=postgresql://mellchat:mellchat_password@postgres:5432/mellchat
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
    volumes:
      - ./logs/api:/app/logs
    networks:
      - mellchat-network

  sync-worker:
    build:
      context: ./backend/sync-worker
      dockerfile: Dockerfile
    container_name: mellchat-sync-worker
    environment:
      - NODE_ENV=development
      - POSTGRES_URL=postgresql://mellchat:mellchat_password@postgres:5432/mellchat
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
    volumes:
      - ./logs/workers:/app/logs
    networks:
      - mellchat-network

  websocket-proxy:
    build:
      context: ./backend/websocket-proxy
      dockerfile: Dockerfile
    container_name: mellchat-websocket-proxy
    ports:
      - "8080:8080"
    environment:
      - REDIS_URL=redis://redis:6379
      - PORT=8080
    depends_on:
      - redis
    volumes:
      - ./logs/api:/app/logs
    networks:
      - mellchat-network

  # Collectors
  twitch-collector:
    build:
      context: ./collectors/twitch
      dockerfile: Dockerfile
    container_name: mellchat-twitch-collector
    environment:
      - REDIS_URL=redis://redis:6379
      - TWITCH_CLIENT_ID=gp762nuuoqcoxypju8c569th9wz7q5
      - TWITCH_CLIENT_SECRET=your_twitch_client_secret
      - TWITCH_ACCESS_TOKEN=4bdy1fx0looodlsxildw6pekcj0fdc
      - TWITCH_REFRESH_TOKEN=mdtk78avpyy7nyfntvjiaper0nw33to5ejd3cs8eqg93qrg3ue
    depends_on:
      - redis
    volumes:
      - ./logs/collectors:/app/logs
    networks:
      - mellchat-network

  youtube-collector:
    build:
      context: ./collectors/youtube
      dockerfile: Dockerfile
    container_name: mellchat-youtube-collector
    environment:
      - REDIS_URL=redis://redis:6379
      - YOUTUBE_API_KEY=AIzaSyBNFqUmAVyODPat0w0HOa6W6POq0N6cook
    depends_on:
      - redis
    volumes:
      - ./logs/collectors:/app/logs
    networks:
      - mellchat-network

  # Frontend
  frontend:
    build:
      context: ./frontend/pwa
      dockerfile: Dockerfile
    container_name: mellchat-frontend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:3000
      - REACT_APP_WS_URL=ws://localhost:8080
    depends_on:
      - api-gateway
      - websocket-proxy
    networks:
      - mellchat-network

  # Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: mellchat-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - mellchat-network

  grafana:
    image: grafana/grafana:latest
    container_name: mellchat-grafana
    ports:
      - "3002:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - prometheus
    networks:
      - mellchat-network

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  mellchat-network:
    driver: bridge
