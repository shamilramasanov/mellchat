#!/bin/bash

# MellChat Project Backup Script
# –°–æ–∑–¥–∞–µ—Ç –ø–æ–ª–Ω—ã–π –±–µ–∫–∞–ø –ø—Ä–æ–µ–∫—Ç–∞ –≤–∫–ª—é—á–∞—è –ë–î, –∫–æ–¥ –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏ –æ—à–∏–±–∫–µ

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
PROJECT_NAME="MellChat"
BACKUP_DIR="./backups"
TIMESTAMP=$(date +"%Y%m%d_%H%M%S")
BACKUP_NAME="${PROJECT_NAME}_backup_${TIMESTAMP}"
FULL_BACKUP_PATH="${BACKUP_DIR}/${BACKUP_NAME}"

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')]${NC} $1"
}

warn() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
check_dependencies() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∫–æ–º–∞–Ω–¥
    for cmd in git pg_dump tar gzip; do
        if ! command -v $cmd &> /dev/null; then
            error "–ö–æ–º–∞–Ω–¥–∞ $cmd –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ—ë –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è."
            exit 1
        fi
    done
    
    log "‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–∞–π–¥–µ–Ω—ã"
}

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –±–µ–∫–∞–ø–∞
create_backup_dir() {
    log "–°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –±–µ–∫–∞–ø–∞..."
    mkdir -p "$FULL_BACKUP_PATH"
    log "‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å–æ–∑–¥–∞–Ω–∞: $FULL_BACKUP_PATH"
}

# –ë–µ–∫–∞–ø –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∫–æ–¥–∞
backup_source_code() {
    log "–°–æ–∑–¥–∞–Ω–∏–µ –±–µ–∫–∞–ø–∞ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∫–æ–¥–∞..."
    
    # –ò—Å–∫–ª—é—á–∞–µ–º –Ω–µ–Ω—É–∂–Ω—ã–µ —Ñ–∞–π–ª—ã
    tar --exclude='node_modules' \
        --exclude='dist' \
        --exclude='.git' \
        --exclude='backups' \
        --exclude='*.log' \
        --exclude='.env' \
        --exclude='.env.local' \
        --exclude='*.tmp' \
        --exclude='coverage' \
        --exclude='.nyc_output' \
        -czf "${FULL_BACKUP_PATH}/source_code.tar.gz" .
    
    log "‚úÖ –ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ source_code.tar.gz"
}

# –ë–µ–∫–∞–ø –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
backup_database() {
    log "–°–æ–∑–¥–∞–Ω–∏–µ –±–µ–∫–∞–ø–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –ë–î
    if [ -z "$DATABASE_URL" ] && [ -z "$POSTGRES_URL" ]; then
        warn "–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ DATABASE_URL –∏–ª–∏ POSTGRES_URL –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
        warn "–ü–æ–ø—ã—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ª–æ–∫–∞–ª—å–Ω–æ–π –ë–î..."
        
        # –ü—Ä–æ–±—É–µ–º –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –ª–æ–∫–∞–ª—å–Ω–æ–π –ë–î
        if pg_dump -h localhost -U postgres -d mellchat > "${FULL_BACKUP_PATH}/database.sql" 2>/dev/null; then
            log "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è"
        else
            warn "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –±–µ–∫–∞–ø –ë–î."
        fi
    else
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è
        DB_URL=${DATABASE_URL:-$POSTGRES_URL}
        pg_dump "$DB_URL" > "${FULL_BACKUP_PATH}/database.sql"
        log "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è"
    fi
}

# –ë–µ–∫–∞–ø –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
backup_configs() {
    log "–°–æ–∑–¥–∞–Ω–∏–µ –±–µ–∫–∞–ø–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π..."
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –∫–æ–Ω—Ñ–∏–≥–æ–≤
    mkdir -p "${FULL_BACKUP_PATH}/configs"
    
    # –ö–æ–ø–∏—Ä—É–µ–º –≤–∞–∂–Ω—ã–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    cp -r backend/api-gateway/database/migrations "${FULL_BACKUP_PATH}/configs/" 2>/dev/null || true
    cp backend/api-gateway/database/schema.sql "${FULL_BACKUP_PATH}/configs/" 2>/dev/null || true
    cp backend/api-gateway/env.example "${FULL_BACKUP_PATH}/configs/" 2>/dev/null || true
    cp package.json "${FULL_BACKUP_PATH}/configs/" 2>/dev/null || true
    cp frontend/pwa/package.json "${FULL_BACKUP_PATH}/configs/frontend_package.json" 2>/dev/null || true
    cp backend/api-gateway/package.json "${FULL_BACKUP_PATH}/configs/backend_package.json" 2>/dev/null || true
    cp vite.config.js "${FULL_BACKUP_PATH}/configs/" 2>/dev/null || true
    cp vercel.json "${FULL_BACKUP_PATH}/configs/" 2>/dev/null || true
    cp railway.toml "${FULL_BACKUP_PATH}/configs/" 2>/dev/null || true
    
    # –ö–æ–ø–∏—Ä—É–µ–º —Å–∫—Ä–∏–ø—Ç—ã
    cp *.sh "${FULL_BACKUP_PATH}/configs/" 2>/dev/null || true
    
    log "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã"
}

# –ë–µ–∫–∞–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
backup_docs() {
    log "–°–æ–∑–¥–∞–Ω–∏–µ –±–µ–∫–∞–ø–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏..."
    
    if [ -d "docs" ]; then
        cp -r docs "${FULL_BACKUP_PATH}/"
        log "‚úÖ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞"
    else
        warn "–ü–∞–ø–∫–∞ docs –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    fi
}

# –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–∏—Å—Ç–µ–º–µ
create_system_info() {
    log "–°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–∏—Å—Ç–µ–º–µ..."
    
    cat > "${FULL_BACKUP_PATH}/system_info.txt" << EOF
MellChat Project Backup
======================

–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: $(date)
–í–µ—Ä—Å–∏—è –ø—Ä–æ–µ–∫—Ç–∞: $(grep '"version"' package.json | cut -d'"' -f4)
Node.js –≤–µ—Ä—Å–∏—è: $(node --version 2>/dev/null || echo "–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
NPM –≤–µ—Ä—Å–∏—è: $(npm --version 2>/dev/null || echo "–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
Git –≤–µ—Ä—Å–∏—è: $(git --version 2>/dev/null || echo "–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞:
$(find . -type f -name "*.js" -o -name "*.jsx" -o -name "*.json" -o -name "*.sql" | head -20)

–†–∞–∑–º–µ—Ä –ø—Ä–æ–µ–∫—Ç–∞: $(du -sh . | cut -f1)

–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:
DATABASE_URL: ${DATABASE_URL:+SET}
POSTGRES_URL: ${POSTGRES_URL:+SET}
REDIS_URL: ${REDIS_URL:+SET}
NODE_ENV: ${NODE_ENV:-not set}

EOF

    log "‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞"
}

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
create_restore_script() {
    log "–°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è..."
    
    cat > "${FULL_BACKUP_PATH}/restore.sh" << 'EOF'
#!/bin/bash

# MellChat Project Restore Script
# –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø—Ä–æ–µ–∫—Ç –∏–∑ –±–µ–∫–∞–ø–∞

set -e

echo "üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ MellChat..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
if [ $# -eq 0 ]; then
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <–ø—É—Ç—å_–∫_–±–µ–∫–∞–ø—É>"
    echo "–ü—Ä–∏–º–µ—Ä: $0 ./backups/MellChat_backup_20241229_143022"
    exit 1
fi

BACKUP_PATH="$1"

if [ ! -d "$BACKUP_PATH" ]; then
    echo "‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –±–µ–∫–∞–ø–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: $BACKUP_PATH"
    exit 1
fi

echo "üìÅ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑: $BACKUP_PATH"

# –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∫–æ–¥–∞
if [ -f "$BACKUP_PATH/source_code.tar.gz" ]; then
    echo "üì¶ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∫–æ–¥–∞..."
    tar -xzf "$BACKUP_PATH/source_code.tar.gz"
    echo "‚úÖ –ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
if [ -f "$BACKUP_PATH/database.sql" ]; then
    echo "üóÑÔ∏è –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    echo "‚ö†Ô∏è  –í–Ω–∏–º–∞–Ω–∏–µ: –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç—É–ø–Ω–∞!"
    echo "–î–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ë–î –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
    echo "psql < $BACKUP_PATH/database.sql"
fi

# –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π
if [ -d "$BACKUP_PATH/configs" ]; then
    echo "‚öôÔ∏è –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π..."
    cp -r "$BACKUP_PATH/configs"/* ./
    echo "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
fi

echo "üéâ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: npm install"
echo "2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è"
echo "3. –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)"
echo "4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç: npm run dev"
EOF

    chmod +x "${FULL_BACKUP_PATH}/restore.sh"
    log "‚úÖ –°–∫—Ä–∏–ø—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω"
}

# –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞
create_final_archive() {
    log "–°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –∞—Ä—Ö–∏–≤–∞..."
    
    cd "$BACKUP_DIR"
    tar -czf "${BACKUP_NAME}.tar.gz" "$BACKUP_NAME"
    
    # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    rm -rf "$BACKUP_NAME"
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä –∞—Ä—Ö–∏–≤–∞
    ARCHIVE_SIZE=$(du -sh "${BACKUP_NAME}.tar.gz" | cut -f1)
    log "‚úÖ –§–∏–Ω–∞–ª—å–Ω—ã–π –∞—Ä—Ö–∏–≤ —Å–æ–∑–¥–∞–Ω: ${BACKUP_NAME}.tar.gz (${ARCHIVE_SIZE})"
    
    cd - > /dev/null
}

# –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –±–µ–∫–∞–ø–æ–≤
cleanup_old_backups() {
    log "–û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –±–µ–∫–∞–ø–æ–≤ (—Å—Ç–∞—Ä—à–µ 7 –¥–Ω–µ–π)..."
    
    find "$BACKUP_DIR" -name "*.tar.gz" -mtime +7 -delete 2>/dev/null || true
    log "‚úÖ –°—Ç–∞—Ä—ã–µ –±–µ–∫–∞–ø—ã –æ—á–∏—â–µ–Ω—ã"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo -e "${BLUE}"
    echo "=========================================="
    echo "    MellChat Project Backup Script"
    echo "=========================================="
    echo -e "${NC}"
    
    log "–ù–∞—á–∞–ª–æ —Å–æ–∑–¥–∞–Ω–∏—è –±–µ–∫–∞–ø–∞ –ø—Ä–æ–µ–∫—Ç–∞ $PROJECT_NAME"
    
    check_dependencies
    create_backup_dir
    backup_source_code
    backup_database
    backup_configs
    backup_docs
    create_system_info
    create_restore_script
    create_final_archive
    cleanup_old_backups
    
    echo -e "${GREEN}"
    echo "=========================================="
    echo "    –ë–µ–∫–∞–ø —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!"
    echo "=========================================="
    echo -e "${NC}"
    
    log "üìÅ –ü—É—Ç—å –∫ –±–µ–∫–∞–ø—É: ${BACKUP_DIR}/${BACKUP_NAME}.tar.gz"
    log "üìã –î–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: ./restore.sh ${BACKUP_DIR}/${BACKUP_NAME}"
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –±–µ–∫–∞–ø–∞
    echo -e "${BLUE}–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –±–µ–∫–∞–ø–∞:${NC}"
    tar -tzf "${BACKUP_DIR}/${BACKUP_NAME}.tar.gz" | head -20
    echo "..."
}

# –ó–∞–ø—É—Å–∫
main "$@"
